{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Sales</th>\n",
       "      <th>Average Check</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Meals Served</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Carmine's (Times Square)</td>\n",
       "      <td>39080335.0</td>\n",
       "      <td>40</td>\n",
       "      <td>New York</td>\n",
       "      <td>N.Y.</td>\n",
       "      <td>469803.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>The Boathouse Orlando</td>\n",
       "      <td>35218364.0</td>\n",
       "      <td>43</td>\n",
       "      <td>Orlando</td>\n",
       "      <td>Fla.</td>\n",
       "      <td>820819.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Old Ebbitt Grill</td>\n",
       "      <td>29104017.0</td>\n",
       "      <td>33</td>\n",
       "      <td>Washington</td>\n",
       "      <td>D.C.</td>\n",
       "      <td>892830.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>LAVO Italian Restaurant &amp; Nightclub</td>\n",
       "      <td>26916180.0</td>\n",
       "      <td>90</td>\n",
       "      <td>New York</td>\n",
       "      <td>N.Y.</td>\n",
       "      <td>198500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Bryant Park Grill &amp; Cafe</td>\n",
       "      <td>26900000.0</td>\n",
       "      <td>62</td>\n",
       "      <td>New York</td>\n",
       "      <td>N.Y.</td>\n",
       "      <td>403000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Rank                           Restaurant       Sales  Average Check  \\\n",
       "0     1             Carmine's (Times Square)  39080335.0             40   \n",
       "1     2                The Boathouse Orlando  35218364.0             43   \n",
       "2     3                     Old Ebbitt Grill  29104017.0             33   \n",
       "3     4  LAVO Italian Restaurant & Nightclub  26916180.0             90   \n",
       "4     5             Bryant Park Grill & Cafe  26900000.0             62   \n",
       "\n",
       "         City State  Meals Served  \n",
       "0    New York  N.Y.      469803.0  \n",
       "1    Orlando   Fla.      820819.0  \n",
       "2  Washington  D.C.      892830.0  \n",
       "3    New York  N.Y.      198500.0  \n",
       "4    New York  N.Y.      403000.0  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('Restaurant-Dataset/Independence100.csv')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,\n",
       "        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,\n",
       "        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,\n",
       "        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n",
       "        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,\n",
       "        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,\n",
       "        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,\n",
       "        92,  93,  94,  95,  96,  97,  98,  99, 100], dtype=int64)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#REVISAR QUE NO EXISTAN NA\n",
    "df[\"Rank\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([\"Carmine's (Times Square)\", 'The Boathouse Orlando',\n",
       "       'Old Ebbitt Grill', 'LAVO Italian Restaurant & Nightclub',\n",
       "       'Bryant Park Grill & Cafe', 'Gibsons Bar & Steakhouse',\n",
       "       'Top of the World at the STRAT ', 'Maple & Ash', 'Balthazar',\n",
       "       'Smith & Wollensky', 'Angus Barn', 'Prime 112',\n",
       "       \"Joe's Seafood, Prime Steak & Stone Crab\",\n",
       "       \"Junior's (Times Square)\", 'The Hamilton', 'Gibsons Italia',\n",
       "       'Komodo', 'Buddakan', 'Bazaar Meat by Jose Andres',\n",
       "       'SW Steakhouse', 'St. Elmo Steak House', 'RPM Steak',\n",
       "       'Mon Ami Gabi', 'Paddlefish', 'Taste of Texas', 'Parc',\n",
       "       \"Bob Chinn's Crab House\", 'Quality Meats', 'Del Posto',\n",
       "       'Shooters Waterfront', 'Bottega Louie', 'Le Diplomate',\n",
       "       'Lavo Italian Restaurant & Lounge', 'Prime Steakhouse', 'Makoto',\n",
       "       \"Original Joe's Westlake\", \"Shaw's Crab House\",\n",
       "       'Founding Farmers (Washington, D.C.)', \"Junior's (49th Street)\",\n",
       "       'Chops Lobster Bar', 'Chicago Cut Steakhouse', 'Swift & Sons',\n",
       "       'Harris Ranch Inn & Restaurant', 'Sparks Steak House',\n",
       "       'Quality Italian', 'Frankenmuth Bavarian Inn',\n",
       "       'Tavern on the Green', \"Abe & Louie's\", 'Rusty Pelican',\n",
       "       'Beauty & Essex (New York City)', 'Grand Central Oyster Bar',\n",
       "       'Delmonico Steakhouse', 'Portland City Grill',\n",
       "       \"Zehnder's of Frankenmuth\", 'The Rustic Inn',\n",
       "       \"Harry Caray's Italian Steakhouse\", 'Keens Steakhouse',\n",
       "       'The Lobster House', 'China Live', 'Prime & Provisions',\n",
       "       \"Carmine's (Las Vegas)\", 'Swan', '15th Street Fisheries',\n",
       "       'Atlanta Fish Market', 'Acme Feed & Seed',\n",
       "       \"Hugo's Frog Bar & Fish House\", 'Cliff House', 'Castaway Burbank',\n",
       "       \"Matt's El Rancho\", 'Timberline Steaks and Grille',\n",
       "       'Beauty & Essex (Las Vegas)', \"Carmine's (Atlantic City)\",\n",
       "       \"Junior's (Brooklyn)\", 'Quartino Ristorante & Wine Bar',\n",
       "       'Paradise Cove Beach Cafe', 'BOA Steakhouse ', \"Original Joe's\",\n",
       "       'Founding Farmers (McLean, Va.)', 'Siena Tavern',\n",
       "       'Girl & the Goat', 'Tavern on Rush',\n",
       "       \"Harry & Izzy's Circle Centre\", \"Scoma's\",\n",
       "       'Farmers Fishers Bakers', 'Southern Steak & Oyster',\n",
       "       'Big Texan Steak Ranch',\n",
       "       'Park Avenue Summer (Autumn, Winter, Spring)',\n",
       "       'Farmers & Distillers', \"Virgil's Real Barbecue\",\n",
       "       \"Carmine's (Washington, D.C.)\", 'Franciscan Crab Restaurant',\n",
       "       \"George's at the Cove\", 'Le Coucou', 'Mi Vida', 'Upland'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Restaurant\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([39080335., 35218364., 29104017., 26916180., 26900000., 25409952.,\n",
       "       25233543., 24837595., 24547800., 24501000., 24268160., 23800000.,\n",
       "       23660000., 23640652., 23138062., 22981600., 22859400., 22749232.,\n",
       "       22500000., 22395577., 22181607., 21523650., 21422141., 20853300.,\n",
       "       20120210., 19831818., 19829500., 19530159., 19379153., 18687601.,\n",
       "       18678000., 18625033., 18601433., 18521000., 18490719., 18483056.,\n",
       "       18386262., 18248030., 18216906., 18159612., 17965500., 17910045.,\n",
       "       17834390., 17816450., 17743720., 17637400., 17599468., 17519030.,\n",
       "       17519000., 17388751., 17212800., 17063477., 16981741., 16364050.,\n",
       "       16304883., 16154000., 16111510., 16063684., 15700000., 15680000.,\n",
       "       15629700., 15450000., 15106280., 15100000., 15067804., 15000000.,\n",
       "       14978103., 14972300., 14897125., 14790123., 14465847., 14407413.,\n",
       "       14381904., 14362103., 14130500., 13987843., 13908292., 13854856.,\n",
       "       13654113., 13552485., 13177468., 13102742., 13100000., 12894700.,\n",
       "       12884000., 12809921., 12713394., 12572109., 12566618., 12505200.,\n",
       "       12498000., 12278839., 12245998., 12228168., 12218147., 12194000.,\n",
       "       12187523., 12032014., 11965564., 11391678.])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Sales\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 40,  43,  33,  90,  62,  80, 103,  99,  87, 107,  75, 135,  86,\n",
       "        23,  91,  81, 108,  98,  67, 119, 149, 102,  76,  48,  55,  35,\n",
       "       115, 194,  57,  36,  38,  79,  97, 173,  54,  72,  22, 106,  95,\n",
       "        29, 100,  19,  83,  17,  59, 130,  45,  78,  69,  60,  37,  39,\n",
       "        32, 110,  82,  66,  65,  24,  84,  31,  52,  27], dtype=int64)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Average Check\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['New York', 'Orlando ', 'Washington', 'Chicago', 'Las Vegas',\n",
       "       'Raleigh', 'Miami Beach', 'Miami', 'Indianapolis', 'Oak Brook',\n",
       "       'Houston', 'Philadelphia', 'Wheeling', 'Ft. Lauderdale',\n",
       "       'Los Angeles', 'Rosemont', 'Bal Harbour', 'Daly City', 'Atlanta',\n",
       "       'Coalinga', 'Frankenmuth', 'Boston', 'Portland', 'Cape May',\n",
       "       'San Francisco', 'Fort Lauderdale', 'Nashville', 'Burbank',\n",
       "       'Austin', 'Denver', 'Atlantic City', 'Malibu', 'West Hollywood',\n",
       "       'McLean', 'Amarillo', 'La Jolla'], dtype=object)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"City\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['N.Y.', 'Fla.', 'D.C.', 'Ill.', 'Nev.', 'N.C.', 'Ind.', 'Texas',\n",
       "       'Pa.', 'Calif.', 'Ga.', 'Mich.', 'Mass.', 'Ore.', 'N.J.', 'Fla. ',\n",
       "       'Tenn.', 'Colo.', 'Va.'], dtype=object)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"State\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([469803., 820819., 892830., 198500., 403000., 348567., 246054.,\n",
       "       210832., 519000., 257364., 315000., 206000., 277850., 914500.,\n",
       "       700861., 252500., 286000., 252962., 265000., 221059., 190000.,\n",
       "       145700., 192774., 202900., 319200., 276444., 417500., 375241.,\n",
       "       486219., 625907., 165148.,  95000., 409752., 322562., 363609.,\n",
       "       252419., 115500., 113600., 256830., 473492., 270000., 648096.,\n",
       "       798000., 168000., 211000., 195343., 611928., 198200., 177337.,\n",
       "       899284., 250000., 160762., 182000., 187970., 296000., 133000.,\n",
       "       268062., 959026., 371000., 287900., 168301., 320000., 300000.,\n",
       "       116154., 176221., 225000., 356000., 274000., 527130., 190616.,\n",
       "       199901., 180320., 495927., 553378., 150000., 129630., 359000.,\n",
       "       394582., 312050., 123204., 267533., 390104., 238182., 183000.,\n",
       "       178944., 174166., 292000., 371025., 337920., 478000., 164531.,\n",
       "       375309., 251800., 148135., 240000.,  87070., 226226., 171825.,\n",
       "       208276.])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Meals Served\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
